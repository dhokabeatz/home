service: ing-henry-portfolio-backend

frameworkVersion: "4"

org: dhokabeatz
app: portfolio-websitevice: ing-henry-portfolio-backend

frameworkVersion: "4"

provider:
  name: aws
  runtime: nodejs18.x
  region: ${opt:region, 'us-east-1'}
  stage: ${opt:stage, 'dev'}
  memorySize: 512
  timeout: 30
  environment:
    NODE_ENV: ${self:provider.stage}
    DATABASE_URL: ${env:DATABASE_URL, 'file:./prisma/prod.db'}
    JWT_SECRET: ${env:JWT_SECRET, 'default-jwt-secret'}
    AWS_REGION: ${env:AWS_REGION, 'us-east-1'}
    # AWS credentials are optional if using IAM roles in Lambda
    # AWS_ACCESS_KEY_ID: ${env:AWS_ACCESS_KEY_ID, ''}
    # AWS_SECRET_ACCESS_KEY: ${env:AWS_SECRET_ACCESS_KEY, ''}
    AWS_S3_BUCKET_NAME: ${env:AWS_S3_BUCKET_NAME, ''}
    EMAIL_HOST: ${env:EMAIL_HOST, 'smtp.gmail.com'}
    EMAIL_PORT: ${env:EMAIL_PORT, '587'}
    EMAIL_USER: ${env:EMAIL_USER, ''}
    EMAIL_PASS: ${env:EMAIL_PASS, ''}
    EMAIL_FROM: ${env:EMAIL_FROM, 'noreply@example.com'}
    PAYSTACK_SECRET_KEY: ${env:PAYSTACK_SECRET_KEY, ''}
    FRONTEND_URL: ${env:FRONTEND_URL, 'https://dhokabeatz.com'}

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
          Resource: arn:aws:logs:*:*:*
        - Effect: Allow
          Action:
            - s3:GetObject
            - s3:PutObject
            - s3:DeleteObject
          Resource: arn:aws:s3:::${env:AWS_S3_BUCKET_NAME}/*
        - Effect: Allow
          Action:
            - s3:ListBucket
          Resource: arn:aws:s3:::${env:AWS_S3_BUCKET_NAME}

plugins:
  - serverless-offline

custom:
  serverless-offline:
    httpPort: 4000
    lambdaPort: 3002
    websocketPort: 3001
    host: localhost
    noPrependStageInUrl: true

functions:
  main:
    handler: dist/lambda.handler
    events:
      - http:
          path: /{proxy+}
          method: ANY
          cors:
            origin: "*"
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
              - X-Requested-With
            allowCredentials: true
      - http:
          path: /
          method: ANY
          cors:
            origin: "*"
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
              - X-Requested-With
            allowCredentials: true

package:
  exclude:
    - node_modules/.prisma/client/libquery_engine-*
    - "!node_modules/.prisma/client/libquery_engine-rhel-*"
    - "!node_modules/.prisma/client/libquery_engine-debian-*"
    - node_modules/@prisma/engines/**
    - "src/**"
    - "test/**"
    - "logs/**"
    - ".env*"
    - "README.md"
    - ".gitignore"
    - "nest-cli.json"
    - "tsconfig*.json"
  include:
    - dist/**
    - node_modules/.prisma/**
    - prisma/schema.prisma
    - prisma/dev.db
    - prisma/prod.db
